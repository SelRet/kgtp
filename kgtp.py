#!/usr/bin/python
# -*- coding: utf-8 -*-

import sys, getopt, os, ConfigParser

#This is config file name
kgtp_config = "/etc/kgtp"

class Lang:
    def __init__(self, language = "en"):
	self.data = {}
	self.language = language
	self.is_set = False

    def set_language(self, language):
	self.language = language
	self.is_set = True

    def add(self, en, cn):
	self.data[en] = cn

    def string(self, s):
	if self.language == "en":
	    return s
	return self.data[s]

class Config(ConfigParser):
    def __init__(self):
	ConfigParser.__init__(self)
	ConfigParser.ConfigParser()

    def add_miss(self):
	'''Check if the config file misses some sections or options.
	Add the missing sections and options and record them in list miss.
	Return miss.'''
	#XXX add something maybe unknown
	miss = []
	return miss

    def read(self, filename):
	self.filename = filename

	err_msg = False
	try:
	    ConfigParser.read(self, filename)
	except Exception,x:
	    err_msg = x

	miss = self.add_miss(self)

	try:
	    self.write(self)
	except Exception, x:
	    print lang.string("Get following error, when wrote config file"),'"',self.filename,'":'
	    print x
	    exit(-1)

	if not err_msg:
	    if len(miss) > 0:
		#用miss 生成出错信息
		err_msg = "xxx"

	if err_msg:
	    raise Exception(err_msg)

    def write(self):
	fp = open(self.filename,"w+")
	fp.write("# This file is generated by kgtp.py\n")
	ConfigParser.write(fp)
	fp.close()
	
    def check(self):
	if lang in self:
	    print 1

def usage(name):
    print "Usage: " + name + " [option]"
    print "Options:"
    print "  -l, --language=LANGUAGE	  Set the language (English/Chinese) of output."
    print "  -c, --config-file=CONFIG_FILE    Set dir of config file.  The default is \"" + kgtp_config + "\"."
    print "  -r, --reconfig		   Reconfig the KGTP."
    print "  -h, --help		       Display this information."

def init(argv):
    '''Return 0 if init OK.
       Return 1 is need simple reconfig.
       Return 2 is need auto reconfig.
       Return -1 is got error.'''

    global lang, config

    #Check if we have root permission
    if os.geteuid() != 0:
	print "You need run this script as the root."
	return -1

    lang = Lang()

    #Handle argv
    try:
	opts, args = getopt.getopt(argv[1:], "hl:c:r", ["help", "language=", "config-file", "reconfig"])
    except getopt.GetoptError:
	usage(argv[0])
	return -1
    for opt, arg in opts:
	if opt in ("-h", "--help"):
	    usage(argv[0])
	    return -1
	elif opt in ("-l", "--language"):
	    lang.set_langue(arg)
	elif opt in ("-c", "--config-file"):
	    kgtp_config = arg
	elif opt in ("-r", "--reconfig"):
	    return 1

    #Config
    config = Config()
    try:
	config.read(kgtp_config)
    except Exception,x:
	print lang.string("Get following error, when read config file"),'"',config.filename,'":'
	print x
	print lang.string("Begin to setup KGTP...")

    #Set lang from config.lang

    #Check if KGTP need check

    #Check GDB

    #Check Linux kernel

    #Check KGTP

    #insmod

    #start GDB

    return 0

def config(auto = False):
    return 0

def run():
    return 0

if __name__ == "__main__":
    ret = init(sys.argv)
    if ret > 0:
	#KGTP need reconfig.
	auto = False
	if ret == 2:
	    auto = True
	ret = config(auto)
    if ret < 0:
	exit (ret)

    run()
